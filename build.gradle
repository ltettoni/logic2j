
group =  'org.logic2j'

apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.8
version = '1.3.0-SNAPSHOT'


description = """\
logic2j : Bring Logic to your Java
----------------------------------

A library to bring declarative and logic programming to your Java software.

It is designed for first-order predicate formal logic, and includes all necessary
components to manage Terms and their representations, an inference engine solver,
an extensible unification framework, an in-memory or database-backed knowledge base.

This work was inspired by &quot;tuprolog&quot; from the University of Bologna, Italy.
This is a major rewrite with different unification and inference algorithms.

The design guidelines were: close bidirectionnal integration to any style of Java, minimal dependencies, fabulous features, small footprint, and high performance.
The driver was to implement a rule engine that &quot;reasons&quot; against large data sets, not only objects in the VM.

Although close to Prolog, this is NOT a Prolog environment, but would be a good candidate to build one...
"""


repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    compile 'org.slf4j:slf4j-api:1.7.30',
            'commons-beanutils:commons-beanutils:1.9.3',
            'org.apache.poi:poi:4.1.2',
            'org.logic2j:logic2j-engine:1.1.0'
    // Need very specific Derby version since the test resource host
    // a zipped DB version in binary format. Require 10.8.1.2.
    testCompile 'junit:junit:4.13', 'org.assertj:assertj-core:3.15.0', 'org.apache.derby:derby:10.13.1.1'
    runtime 'ch.qos.logback:logback-classic:1.2.3'
}


// Unit tests use a public database embedded in the test resources
task unzipTestDb {
    // Not yet needed - will be !
    copy{
        from(zipTree("src/test/resources/db/zipcodes1/derby-v10.13.1.1.zip"))
        into("src/test/resources/db/zipcodes1")
    }
}


// Not yet needed - will be !
test.dependsOn unzipTestDb
