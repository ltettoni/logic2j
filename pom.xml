<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.logic2j</groupId>
  <artifactId>logic2j</artifactId>
  <version>1.3.0-SNAPSHOT</version>

  <properties>
    <logic2j-engine.version>1.2.0-SNAPSHOT</logic2j-engine.version>
    <slf4j-api.version>1.7.36</slf4j-api.version>
    <poi.version>3.17</poi.version>
    <commons-beanutils.version>1.9.4</commons-beanutils.version>
    <derby.version>10.14.2.0</derby.version>
    <logback.version>1.2.11</logback.version>
    <junit.version>4.13.2</junit.version>
    <assertj.version>3.23.1</assertj.version>

    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <description>
    logic2j : Bring Logic to your Java
    ----------------------------------

    A library to bring declarative and logic programming to your Java software.

    It is designed for first-order predicate formal logic, and includes all necessary
    components to manage Terms and their representations, an inference engine solver,
    an extensible unification framework, an in-memory or database-backed knowledge base.

    This work was inspired by &quot;tuprolog&quot; from the University of Bologna, Italy.
    This is a major rewrite with different unification and inference algorithms.

    The design guidelines were: close bidirectionnal integration to any style of Java, minimal dependencies, fabulous features, small footprint, and high performance.
    The driver was to implement a rule engine that &quot;reasons&quot; against large data sets, not only objects in the VM.

    Although close to Prolog, this is NOT a Prolog environment, but would be a good candidate to build one...
  </description>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-api.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>${commons-beanutils.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>${poi.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.logic2j</groupId>
      <artifactId>logic2j-engine</artifactId>
      <version>${logic2j-engine.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>${derby.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>Prepare-test-resources</id>
            <phase>generate-test-resources</phase>
            <configuration>
              <tasks>
                <unzip src="${project.basedir}/src/test/resources/db/zipcodes1/derby-v10.13.1.1.zip" dest="${project.basedir}/src/test/resources/db/zipcodes1"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
