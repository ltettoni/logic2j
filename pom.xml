<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.logic2j</groupId>
  <artifactId>logic2j</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>logic2j : Logic Programming for Java</name>
  
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.2</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.8.1.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>0.9.29</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <url>https://github.com/ltettoni/logic2j</url>
  <description> logic4j : Logic Programming for Java
   ------------------------------------

This library integrates declarative &amp; logic programming to your Java software.

It is designed for first-order predicate formal logic, and includes all necessary
components to manage Terms and their representations, an inference engine solver,
an extensible unification framework, an in-memory or database-backed knowledge base.

This work was inspired by &quot;tuprolog&quot; from the University of Bologna, Italy. 
This is a major rewrite with different unification and inference algorithms.

The design guidelines were: close bidirectionnal integration to any style of Java, minimal dependencies, fabulous features, small footprint, and high performance.
The driver was to implement a rule engine that &quot;reasons&quot; against large data sets, not only objects in the VM.

Although close to Prolog, this is NOT a Prolog environment, but would be a good candidate to build one...
</description>
</project>