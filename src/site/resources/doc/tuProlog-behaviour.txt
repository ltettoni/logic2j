tuprolog

?- bind3_23(A,B,C).
yes.
C / B
Solution: bind3_23(A,B,B)

?- bind3_12(A,B,C), bind3_23(A,B,C).
yes.
B / A  C / A
Solution: ','(bind3_12(A,A,A),bind3_23(A,A,A))

-? bind2_11(A,_).
yes.
Solution: bind2_11(A,A)



-? bind2_11(A,B).
yes.
B / A
Solution: bind2_11(A,A)


?- bind2_11(A,B) ,bind2_11(B, C),bind2_11(C,3). 
yes.
A / 3  B / 3  C / 3
Solution: ','(bind2_11(3,3),','(bind2_11(3,3),bind2_11(3,3)))


?- bind2_11(A,B) ,bind2_11(B, C),bind2_11(C,D). 
yes.
B / A  C / A  D / A
Solution: ','(bind2_11(A,A),','(bind2_11(A,A),bind2_11(A,A)))


?- arg1(f(X),Y), arg1(f(Y), Z).
yes.
Y / X  Z / X
Solution: ','(arg1(f(X),X),arg1(f(X),X))


?- arg1(f(X),Y), arg1(Y, Z).
yes.
X / f(_5994703)  Y / f(_5994703)
Solution: ','(arg1(f(f(_5994703)),f(_5994703)),arg1(f(_5994703),_5994703))


?- arg1(X,Y), arg1(Y, Z).
yes.
X / f(f(_3346361))  Y / f(_3346361)
Solution: ','(arg1(f(f(_3346361)),f(_3346361)),arg1(f(_3346361),_3346361))






Algo:
-----
Ligne 1: Bindings: affiche les variables liées et leur dernier binding (si c'est une variable, le nom de cette variable). Les variables libres ne sont pas affichées.
Ligne 2: Affiche la solution avec:
  si une variable est libre, son nom
  si une variable est liée, déréférence jusqu'é une variable libre, alors affiche son nom
Tab "bindings":
  si une variable est libre, affiche "_" (variable anonyme)
  sinon, comme pour les variables liées ci-dessus
  





 